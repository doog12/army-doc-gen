from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import CommandStart

from keyboards.inline import get_main_type_keyboard
import os
from dotenv import load_dotenv

router = Router()


class AuthForm(StatesGroup):
    password = State()


load_dotenv()
AUTH_PASSWORD = os.getenv("BOT_PASSWORD")


@router.message(CommandStart())
async def ask_password(message: Message, state: FSMContext):
    await state.set_state(AuthForm.password)
    msg = await message.answer("üîê –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –±–æ—Ç–∞:")
    await state.update_data(prompt_msg_id=msg.message_id)


@router.message(AuthForm.password)
async def verify_password(message: Message, state: FSMContext):
    fullUserName = message.from_user.full_name
    userName = f" (@{message.from_user.username})" if message.from_user.username else ""
    user_data = await state.get_data()
    prompt_msg_id = user_data.get("prompt_msg_id")

    if message.text.strip() == AUTH_PASSWORD:
        await state.clear()

        await message.delete()

        # –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ "üîê –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å..."
        if prompt_msg_id:
            try:
                await message.bot.delete_message(chat_id=message.chat.id, message_id=prompt_msg_id)
            except:
                pass  # —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å —É–∂–µ —É–¥–∞–ª–µ–Ω–æ
        await message.answer("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\n")
        await message.answer(
            f"üëã –ü—Ä–∏–≤—ñ—Ç, {fullUserName}{userName}! –Ø –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤.\n\n"
            "üìÅ –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∫—Ä–æ–∫ 1 –∑ 3):",
            reply_markup=get_main_type_keyboard(),
        )
    else:
        await message.answer("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑:")
