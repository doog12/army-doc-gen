import asyncio
from io import BytesIO

import aiohttp
from aiogram import Bot
from aiogram.types import BufferedInputFile


async def download_and_send_file(
    bot: Bot, docx_url: str, subtype_name: str, chat_id: int, callback_function
):
    status_msg = await bot.send_message(chat_id=chat_id, text="üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É...")

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(docx_url, timeout=30) as response:
                if response.status == 200:
                    file_bytes = await response.read()
                    file = BytesIO(file_bytes)
                    file_name = f"{subtype_name}.docx"

                    # Wrap the BytesIO object in an InputFile
                    input_file = BufferedInputFile(file_bytes, filename=file_name)

                    await bot.send_document(chat_id=chat_id, document=input_file)
                    await bot.delete_message(chat_id=chat_id, message_id=status_msg.message_id)
                    await bot.send_message(chat_id=chat_id, text="‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
                    await bot.send_message(
                        chat_id=chat_id,
                        text="üìÅ –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–∫—Ä–æ–∫ 1 –∑ 3):",
                        reply_markup=callback_function(),
                    )
                else:
                    await bot.send_message(
                        chat_id=chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOCX."
                    )
    except asyncio.TimeoutError:
        await bot.send_message(chat_id=chat_id, text="‚è±Ô∏è –¢–∞–π–º-–∞—É—Ç –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ñ–∞–π–ª—É.")
    except Exception as e:
        await bot.send_message(chat_id=chat_id, text=f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {str(e)}")
